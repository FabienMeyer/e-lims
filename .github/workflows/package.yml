name: Package
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/fabienmeyer/e-lims:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Poetry configure and install
        run: |
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.create true
          poetry env use /root/.pyenv/versions/3.10.13/bin/python
          poetry install

  linters:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Black
        run: | 
          poetry run black .
      
      - name: Run Ruff
        run: |
          poetry run ruff check .

      - name: Run Mypy
        run: |
          poetry run mypy .

  tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/fabienmeyer/e-lims:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        python-version: ["3.10.13", "3.11.5"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Poetry configure and install
        run: |
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.create true
          poetry env use /root/.pyenv/versions/${{ matrix.python-version }}/bin/python
          poetry install

      - name: Run Pytest
        run: |
          poetry run pytest .

  documentation:
    needs: build
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Run Sphinx
          run: | 
            poetry run sphinx-build -E -W -c docs/source -b html docs/source docs/build/html

  pages:
    needs: documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html

  pypi:
    needs: [tests, linters]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Poetry build
        run: poetry build

      # - name: Poetry publish
      #   run: poetry publish
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}