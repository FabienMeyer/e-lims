[tox]
envlist = py310, py311, py312, linters, documentation, build
isolated_build = true
skipdist = true

[tox:.package]
basepython = python3

[testenv]
allowlist_externals = poetry
skip_install = true
commands =
    poetry run pytest --cov=tests .
    poetry run coverage xml  

[testenv:ruff-format]
skip_install = true
allowlist_externals = poetry
commands = poetry run ruff format .

[testenv:ruff-check]
skip_install = true
allowlist_externals = poetry
commands = poetry run ruff check .

[testenv:mypy]
skip_install = true
allowlist_externals = poetry
commands = poetry run mypy src/ tests/

[testenv:bandit]
skip_install = true
allowlist_externals = poetry
commands = poetry run bandit src/ tests/

[testenv:linters]
skip_install = true
deps =
    {[testenv:ruff-format]deps}
    {[testenv:ruff-check]deps}
    {[testenv:mypy]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:ruff-format]commands}
    {[testenv:ruff-check]commands}
    {[testenv:mypy]commands}
    {[testenv:bandit]commands}

[testenv:doc8]
skip_install = true
allowlist_externals = poetry
extras = docs
commands = poetry run doc8 docs/src/

[testenv:sphinx]
skip_install = true
allowlist_externals = poetry
extras = docs
commands = poetry run sphinx-build -E -W -c docs/src -b html docs/src docs/build/html

[testenv:documentation]
skip_install = true
deps =
    {[testenv:doc8]deps}
    {[testenv:sphinx]deps}

commands =
    {[testenv:doc8]commands}
    {[testenv:sphinx]commands}

[pytest]
norecursedirs = .git .* *.egg* old docs dist build
addopts = --doctest-modules
testpaths = tests/